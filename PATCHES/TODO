TODO
================================================================================

getboottime()
	- needs  G_ and V_ variant and applied correctly in the right places.
	- failed/xdr
	- xhr,  sys/sys/time.h

hostid?

failed/xej	sysv_msg ...
failed/xek	sysv_sem ...
failed/xel	sysy_shm ...
	}}} all three need proper OSD save/restore if we keep it?

xes -> vfs_cache.c needs review;  just applied blindly so far.
	- compiles now :)

Lots of &prison0 vs. V_prison0  (no &)  but only in some places;  check that!
	- the osd calls take the prison0 argument twice; check those still


vps_pager_getpages()



------------------------------------------
panic while just sitting in a vps shell for a while not doing anything;
I guess it's a lock leak in an error case?

root@rabbit3:~ # spin lock 0xffffffff81cdd700 (sched lock 0) held by 0xfffff80007731000 (tid 100003) too long
panic: spin lock held too long
cpuid = 3
time = 1501167600
KDB: stack backtrace:
db_trace_self_wrapper() at db_trace_self_wrapper+0x2b/frame 0xfffffe085f7cd3c0
vpanic() at vpanic+0x19c/frame 0xfffffe085f7cd440
panic() at panic+0x43/frame 0xfffffe085f7cd4a0
_mtx_lock_spin_cookie() at _mtx_lock_spin_cookie+0x328/frame 0xfffffe085f7cd520
__mtx_lock_spin_flags() at __mtx_lock_spin_flags+0xe0/frame 0xfffffe085f7cd560
sched_add() at sched_add+0xe4/frame 0xfffffe085f7cd5a0
setrunnable() at setrunnable+0x90/frame 0xfffffe085f7cd5c0
sleepq_broadcast() at sleepq_broadcast+0xe8/frame 0xfffffe085f7cd600
wakeupshlk() at wakeupshlk+0x168/frame 0xfffffe085f7cd650
__lockmgr_args() at __lockmgr_args+0x82e/frame 0xfffffe085f7cd6f0
lockmgr_unlock_fast_path() at lockmgr_unlock_fast_path+0x184/frame 0xfffffe085f7cd740
VOP_UNLOCK_APV() at VOP_UNLOCK_APV+0xe0/frame 0xfffffe085f7cd770
vn_statfile() at vn_statfile+0x72/frame 0xfffffe085f7cd7c0
kern_fstat() at kern_fstat+0xa8/frame 0xfffffe085f7cd810
freebsd11_fstat() at freebsd11_fstat+0x1d/frame 0xfffffe085f7cd980
amd64_syscall() at amd64_syscall+0x859/frame 0xfffffe085f7cdab0
Xfast_syscall() at Xfast_syscall+0x104/frame 0xfffffe085f7cdab0
--- syscall (0, FreeBSD ELF64, nosys), rip = 0x800638fca, rsp = 0x7fffffffd0e8, rbp = 0x7fffffffd190 ---
KDB: enter: panic
[ thread pid 991 tid 100086 ]
Stopped at      kdb_enter+0x3b: movq    $0,kdb_why

------------------------------------------

This keeps happening on vpsctl resume:

root@rabbit3:~ # vps_suspend_relink_delete: get_next_dirent() error=2

------------------------------------------

vpsctl migrate eventtually paniced while doing the snapshot.

------------------------------------------

root@rabbit4:/ # vpsctl suspend testvps
root@rabbit4:/ # vpsctl snapshot testvps /var/tmp/testvps.snap
vps_ctx_extend: size=8 with the following non-sleepable locks held:
exclusive sleep mutex jail mutex (jail mutex) r = 0 (0xfffff8000da3a040) locked @ /tank/users/bz/vps_zambcom/vps_zabcom/sys/sys/jail.h:257
stack backtrace:
#0 0xffffffff80ac0da0 at witness_debugger+0x70
#1 0xffffffff80ac21ce at witness_warn+0x45e
#2 0xffffffff8249d388 at vps_dumpobj_space+0x68
#3 0xffffffff824a9e0d at vps_snapshot_prison_one+0x18d
#4 0xffffffff824a6ff9 at vps_snapshot+0xff9
#5 0xffffffff8247d0df at vps_ioc_snapshot+0x9f
#6 0xffffffff8092c3b0 at devfs_ioctl+0xc0
#7 0xffffffff810842e0 at VOP_IOCTL_APV+0xe0
#8 0xffffffff80b3e404 at vn_ioctl+0x124
#9 0xffffffff8092ca8f at devfs_ioctl_f+0x1f
#10 0xffffffff80ac69ad at kern_ioctl+0x2cd
#11 0xffffffff80ac666f at sys_ioctl+0x16f
#12 0xffffffff80f0e2c9 at amd64_syscall+0x859
#13 0xffffffff80eeeff4 at Xfast_syscall+0x104
lock order reversal:
 1st 0xfffff801367dd078 vm map (user) (vm map (user)) @ /tank/users/bz/vps_zambcom/vps_zabcom/sys/modules/vps_snapst/../../vps/vps_snapst.c:3225
 2nd 0xfffff800221f5068 nfs (nfs) @ /tank/users/bz/vps_zambcom/vps_zabcom/sys/kern/vfs_cache.c:2192
stack backtrace:
#0 0xffffffff80ac0da0 at witness_debugger+0x70
#1 0xffffffff80ac0c93 at witness_checkorder+0xe23
#2 0xffffffff80a335ee at lockmgr_lock_fast_path+0x6e
#3 0xffffffff81085810 at VOP_LOCK1_APV+0xe0
#4 0xffffffff80b3f68a at _vn_lock+0x6a
#5 0xffffffff80b18c9c at vn_vptocnp+0x12c
#6 0xffffffff80b18773 at vn_fullpath1+0xf3
#7 0xffffffff80b18e7f at vn_fullpath1_failsafe+0x3f
#8 0xffffffff824a9fff at vps_snapshot_vnode+0x7f
#9 0xffffffff824aa688 at vps_snapshot_vmobject+0x558
#10 0xffffffff824a7bdf at vps_snapshot+0x1bdf
#11 0xffffffff8247d0df at vps_ioc_snapshot+0x9f
#12 0xffffffff8092c3b0 at devfs_ioctl+0xc0
#13 0xffffffff810842e0 at VOP_IOCTL_APV+0xe0
#14 0xffffffff80b3e404 at vn_ioctl+0x124
#15 0xffffffff8092ca8f at devfs_ioctl_f+0x1f
#16 0xffffffff80ac69ad at kern_ioctl+0x2cd
#17 0xffffffff80ac666f at sys_ioctl+0x16f
lock order reversal:
 1st 0xfffff801367dd078 vm map (user) (vm map (user)) @ /tank/users/bz/vps_zambcom/vps_zabcom/sys/modules/vps_snapst/../../vps/vps_snapst.c:3225                                        [6/1974]
 2nd 0xfffff8000daa0040 filedesc structure (filedesc structure) @ /tank/users/bz/vps_zambcom/vps_zabcom/sys/kern/vfs_lookup.c:378
stack backtrace:
#0 0xffffffff80ac0da0 at witness_debugger+0x70
#1 0xffffffff80ac0c93 at witness_checkorder+0xe23
#2 0xffffffff80a67d18 at _sx_slock+0x68
#3 0xffffffff80b21673 at namei+0x233
#4 0xffffffff80b3eed9 at vn_open_cred+0x209
#5 0xffffffff80b1d015 at vop_stdvptocnp+0x165
#6 0xffffffff81087a90 at VOP_VPTOCNP_APV+0xe0
#7 0xffffffff80b18cd1 at vn_vptocnp+0x161
#8 0xffffffff80b18773 at vn_fullpath1+0xf3
#9 0xffffffff80b18e7f at vn_fullpath1_failsafe+0x3f
#10 0xffffffff824a9fff at vps_snapshot_vnode+0x7f
#11 0xffffffff824aa688 at vps_snapshot_vmobject+0x558
#12 0xffffffff824a7bdf at vps_snapshot+0x1bdf
#13 0xffffffff8247d0df at vps_ioc_snapshot+0x9f
#14 0xffffffff8092c3b0 at devfs_ioctl+0xc0
#15 0xffffffff810842e0 at VOP_IOCTL_APV+0xe0
#16 0xffffffff80b3e404 at vn_ioctl+0x124
#17 0xffffffff8092ca8f at devfs_ioctl_f+0x1f
sched_switch() at sched_switch+0x4e0/frame 0xfffffe086075c900
mi_switch() at mi_switch+0x18b/frame 0xfffffe086075c930
thread_suspend_check() at thread_suspend_check+0x93/frame 0xfffffe086075c980
amd64_syscall() at amd64_syscall+0x160/frame 0xfffffe086075cab0
Xfast_syscall() at Xfast_syscall+0x104/frame 0xfffffe086075cab0
--- syscall (240, FreeBSD ELF64, sys_nanosleep), rip = 0x4236ba, rsp = 0x7fffffffe608, rbp = 0x7fffffffe640 ---
sched_switch() at sched_switch+0x4e0/frame 0xfffffe0860018900
mi_switch() at mi_switch+0x18b/frame 0xfffffe0860018930
thread_suspend_check() at thread_suspend_check+0x93/frame 0xfffffe0860018980
amd64_syscall() at amd64_syscall+0x160/frame 0xfffffe0860018ab0
Xfast_syscall() at Xfast_syscall+0x104/frame 0xfffffe0860018ab0
--- syscall (240, FreeBSD ELF64, sys_nanosleep), rip = 0x80093a75a, rsp = 0x7fffffffecc8, rbp = 0x7fffffffed10 ---
vps_snapshot: error=22

vps_snapshot_proc: vps_snapshot_proc_one(p=0xfffff8000d84b540) returned error

vps_snapshot_fdset: unsupported cap_rights: fc_nioctls=2 fc_fcntls=00000008

ioctl VPS_IOC_SNAPST: Invalid argument
Kernel error messages:
------------------------
vps_snapshot: error=22
vps_snapshot_proc: vps_snapshot_proc_one(p=0xfffff8000d84b540) returned error
vps_snapshot_fdset: unsupported cap_rights: fc_nioctls=2 fc_fcntls=00000008
------------------------

------------------------------------------

root@rabbit3:/home/test # vpsctl showdump /var/tmp/testvps.snap
open(/dev/vps): No such file or directory

That is surprising;  wouldn't expect that to need the device node?

------------------------------------------






# end
