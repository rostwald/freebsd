diff -Naupr -x .svn -x 'rsync_vps.*' -I '$Id.*$' -I '$FreeBSD.*$' 10.0.0-stripped/sys/vm/vm_page.c trunk-clean/sys/vm/vm_page.c
--- 10.0.0-stripped/sys/vm/vm_page.c	2014-01-15 14:19:22.000000000 +0100
+++ trunk-clean/sys/vm/vm_page.c	2014-01-15 14:31:32.000000000 +0100
@@ -118,6 +118,30 @@ __FBSDID("$FreeBSD: release/10.0.0/sys/v
 
 #include <machine/md_var.h>
 
+#include <vps/vps_account.h>
+
+#ifdef VPS 
+        
+#define VPS_ACCOUNT_RESIDENT(object, action, charge)      \
+                vps_account_resident(object, action, charge)
+                
+static __inline void
+vps_account_resident(vm_object_t object, int action, size_t charge)
+{
+         
+        if (object->cred == NULL)
+                return;
+        
+        vps_account(object->cred->cr_vps, VPS_ACC_PHYS,
+                action, charge << PAGE_SHIFT);
+}
+
+#else
+
+#define VPS_ACCOUNT_RESIDENT(object, action, charge)
+                
+#endif /* !VPS */
+
 /*
  *	Associated with page of user-allocatable memory is a
  *	page structure.
@@ -1034,6 +1058,7 @@ vm_page_insert_radixdone(vm_page_t m, vm
 	 */
 	object->resident_page_count++;
 
+	VPS_ACCOUNT_RESIDENT(object, VPS_ACC_ALLOC, 1);
 	/*
 	 * Hold the vnode until the last page is released.
 	 */
@@ -1091,6 +1116,7 @@ vm_page_remove(vm_page_t m)
 	 * And show that the object has one fewer resident page.
 	 */
 	object->resident_page_count--;
+	VPS_ACCOUNT_RESIDENT(object, VPS_ACC_FREE, 1);
 
 	/*
 	 * The vnode may now be recycled.
@@ -2534,6 +2560,7 @@ vm_page_cache(vm_page_t m)
 	vm_radix_remove(&object->rtree, m->pindex);
 	TAILQ_REMOVE(&object->memq, m, listq);
 	object->resident_page_count--;
+	VPS_ACCOUNT_RESIDENT(object, VPS_ACC_FREE, 1);
 
 	/*
 	 * Restore the default memory attribute to the page.
