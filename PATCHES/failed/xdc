diff -Naupr -x .svn -x 'rsync_vps.*' -I '$Id.*$' -I '$FreeBSD.*$' 10.0.0-stripped/sys/kern/kern_kthread.c trunk-clean/sys/kern/kern_kthread.c
--- 10.0.0-stripped/sys/kern/kern_kthread.c	2014-01-15 14:20:22.000000000 +0100
+++ trunk-clean/sys/kern/kern_kthread.c	2014-01-15 14:31:10.000000000 +0100
@@ -43,6 +43,8 @@ __FBSDID("$FreeBSD: release/10.0.0/sys/k
 #include <sys/sched.h>
 #include <vm/vm.h>
 #include <vm/vm_extern.h>
+#include <vps/vps.h>
+#include <vps/vps2.h>
 
 #include <machine/stdarg.h>
 
@@ -150,11 +152,11 @@ kproc_exit(int ecode)
 	 * Reparent curthread from proc0 to init so that the zombie
 	 * is harvested.
 	 */
-	sx_xlock(&proctree_lock);
+	sx_xlock(&V_proctree_lock);
 	PROC_LOCK(p);
-	proc_reparent(p, initproc);
+	proc_reparent(p, V_initproc);
 	PROC_UNLOCK(p);
-	sx_xunlock(&proctree_lock);
+	sx_xunlock(&V_proctree_lock);
 
 	/*
 	 * Wakeup anyone waiting for us to exit.
@@ -289,6 +291,10 @@ kthread_add(void (*func)(void *), void *
 
 	newtd->td_pflags |= TDP_KTHREAD;
 	newtd->td_ucred = crhold(p->p_ucred);
+#ifdef VPS
+	newtd->td_vps = newtd->td_ucred->cr_vps;
+	newtd->td_vps_acc = newtd->td_ucred->cr_vps->vps_acc;
+#endif
 
 	/* this code almost the same as create_thread() in kern_thr.c */
 	p->p_flag |= P_HADTHREADS;
