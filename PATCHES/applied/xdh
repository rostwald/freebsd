diff -Naupr -x .svn -x 'rsync_vps.*' -I '$Id.*$' -I '$FreeBSD.*$' 10.0.0-stripped/sys/kern/kern_priv.c trunk-clean/sys/kern/kern_priv.c
--- 10.0.0-stripped/sys/kern/kern_priv.c	2014-01-15 14:20:23.000000000 +0100
+++ trunk-clean/sys/kern/kern_priv.c	2014-01-15 14:31:10.000000000 +0100
@@ -42,6 +42,9 @@ __FBSDID("$FreeBSD: release/10.0.0/sys/k
 #include <sys/sysctl.h>
 #include <sys/systm.h>
 
+#include <vps/vps.h>
+#include <vps/vps2.h>
+
 #include <security/mac/mac_framework.h>
 
 /*
@@ -90,14 +93,6 @@ priv_check_cred(struct ucred *cred, int 
 		goto out;
 #endif
 
-	/*
-	 * Jail policy will restrict certain privileges that may otherwise be
-	 * be granted.
-	 */
-	error = prison_priv_check(cred, priv);
-	if (error)
-		goto out;
-
 	if (unprivileged_mlock) {
 		/*
 		 * Allow unprivileged users to call mlock(2)/munlock(2) and
@@ -112,6 +107,24 @@ priv_check_cred(struct ucred *cred, int 
 	}
 
 	/*
+	 * Jail policy will restrict certain privileges that may otherwise be
+	 * be granted.
+	 */
+	error = prison_priv_check(cred, priv);
+	if (error)
+		goto out;
+
+#ifdef VPS
+	/*
+	 * VPS instances have a very fine granulated privilege mask.
+	 * In the ''base'' instance altough, usually every privilege is set.
+	 */
+	error = vps_priv_check(cred, priv);
+	if (error)
+		goto out;
+#endif
+
+	/*
 	 * Having determined if privilege is restricted by various policies,
 	 * now determine if privilege is granted.  At this point, any policy
 	 * may grant privilege.  For now, we allow short-circuit boolean
