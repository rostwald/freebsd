diff -Naupr -x .svn -x 'rsync_vps.*' -I '$Id.*$' -I '$FreeBSD.*$' 10.0.0-stripped/sys/netinet/tcp_usrreq.c trunk-clean/sys/netinet/tcp_usrreq.c
--- 10.0.0-stripped/sys/netinet/tcp_usrreq.c	2014-01-15 14:19:26.000000000 +0100
+++ trunk-clean/sys/netinet/tcp_usrreq.c	2014-01-15 14:31:12.000000000 +0100
@@ -59,6 +59,9 @@ __FBSDID("$FreeBSD: release/10.0.0/sys/n
 #include <sys/proc.h>
 #include <sys/jail.h>
 
+#include <vps/vps.h>
+#include <vps/vps2.h>
+
 #ifdef DDB
 #include <ddb/ddb.h>
 #endif
@@ -91,6 +94,10 @@ __FBSDID("$FreeBSD: release/10.0.0/sys/n
 #include <netinet/tcp_offload.h>
 #endif
 
+#ifdef VPS
+static void tcp_usr_abort(struct socket *so);
+#endif
+
 /*
  * TCP protocol interface to socket abstraction.
  */
@@ -587,6 +594,14 @@ tcp_usr_disconnect(struct socket *so)
 	int error = 0;
 
 	TCPDEBUG0;
+#ifdef VPS
+	if (so->so_vnet->vnet_vps_flags & VPS_VNET_ABORT) {
+		DBGCORE("%s: VPS_VNET_ABORT --> tcp_usr_abort(so=%p)\n",
+			__func__, so);
+		tcp_usr_abort(so);
+		return (0);
+	}
+#endif
 	INP_INFO_WLOCK(&V_tcbinfo);
 	inp = sotoinpcb(so);
 	KASSERT(inp != NULL, ("tcp_usr_disconnect: inp == NULL"));
@@ -978,6 +993,15 @@ tcp_usr_close(struct socket *so)
 	struct tcpcb *tp = NULL;
 	TCPDEBUG0;
 
+#ifdef VPS
+	if (so->so_vnet->vnet_vps_flags & VPS_VNET_ABORT) {
+		DBGCORE("%s: VPS_VNET_ABORT --> tcp_usr_abort(so=%p)\n",
+			__func__, so);
+		tcp_usr_abort(so);
+		return;
+	}
+#endif
+
 	inp = sotoinpcb(so);
 	KASSERT(inp != NULL, ("tcp_usr_close: inp == NULL"));
 
