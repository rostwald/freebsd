diff -Naupr -x .svn -x 'rsync_vps.*' -I '$Id.*$' -I '$FreeBSD.*$' 10.0.0-stripped/sys/fs/pseudofs/pseudofs_vnops.c trunk-clean/sys/fs/pseudofs/pseudofs_vnops.c
--- 10.0.0-stripped/sys/fs/pseudofs/pseudofs_vnops.c	2014-01-15 14:19:15.000000000 +0100
+++ trunk-clean/sys/fs/pseudofs/pseudofs_vnops.c	2014-01-15 14:31:12.000000000 +0100
@@ -49,6 +49,8 @@ __FBSDID("$FreeBSD: release/10.0.0/sys/f
 #include <sys/sysctl.h>
 #include <sys/vnode.h>
 
+#include <vps/vps.h>
+
 #include <fs/pseudofs/pseudofs.h>
 #include <fs/pseudofs/pseudofs_internal.h>
 
@@ -704,7 +706,7 @@ pfs_iterate(struct thread *td, struct pr
 {
 	int visible;
 
-	sx_assert(&allproc_lock, SX_SLOCKED);
+	sx_assert(&V_allproc_lock, SX_SLOCKED);
 	pfs_assert_owned(pd);
  again:
 	if (*pn == NULL) {
@@ -717,7 +719,7 @@ pfs_iterate(struct thread *td, struct pr
 	if (*pn != NULL && (*pn)->pn_type == pfstype_procdir) {
 		/* next process */
 		if (*p == NULL)
-			*p = LIST_FIRST(&allproc);
+			*p = LIST_FIRST(&V_allproc);
 		else
 			*p = LIST_NEXT(*p, p_list);
 		/* out of processes: next node */
@@ -790,12 +792,12 @@ pfs_readdir(struct vop_readdir_args *va)
 	if (resid == 0)
 		PFS_RETURN (0);
 
-	sx_slock(&allproc_lock);
+	sx_slock(&V_allproc_lock);
 	pfs_lock(pd);
 
         /* check if the directory is visible to the caller */
         if (!pfs_visible(curthread, pd, pid, &proc)) {
-		sx_sunlock(&allproc_lock);
+		sx_sunlock(&V_allproc_lock);
 		pfs_unlock(pd);
                 PFS_RETURN (ENOENT);
 	}
@@ -809,7 +811,7 @@ pfs_readdir(struct vop_readdir_args *va)
 			if (proc != NULL)
 				PROC_UNLOCK(proc);
 			pfs_unlock(pd);
-			sx_sunlock(&allproc_lock);
+			sx_sunlock(&V_allproc_lock);
 			PFS_RETURN (0);
 		}
 	}
@@ -859,7 +861,7 @@ pfs_readdir(struct vop_readdir_args *va)
 	if (proc != NULL)
 		PROC_UNLOCK(proc);
 	pfs_unlock(pd);
-	sx_sunlock(&allproc_lock);
+	sx_sunlock(&V_allproc_lock);
 	i = 0;
 	STAILQ_FOREACH_SAFE(pfsent, &lst, link, pfsent2) {
 		if (error == 0)
