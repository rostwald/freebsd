#!/bin/sh
#-
# Copyright 2016 Kris Moore
# All rights reserved
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted providing that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

# Since TrueOS is a rolling-release based upon FreeBSD HEAD
# we have to be a bit more careful with pkg-base and the fact
# that packages on the remote might have newer ABI than currently
# is running
#
# To prevent getting in a side-ways situation with mix-matched
# ABI's (But keep pulling from a single rolling-release repo)
# we instead do a pre-flight sanity check. If we detect that
# the remote has newer FreeBSD version, we will halt and prompt
# the user to update before installing.
do_sanity_check()
{
  # Start by updating the repo files
  pkg-static update

  # Get the local FreeBSD-runtime
  local _curver=`pkg-static query '%vn' FreeBSD-runtime 2>/dev/null`

  # Get the remote FreeBSD-runtime
  local _remotever=`pkg-static rquery '%vn' FreeBSD-runtime 2>/dev/null`

  # No FreeBSD-runtime? No problem!
  if [ -z "$_curver" ] ; then return 0 ; fi
  if [ -z "$_remotever" ] ; then return 0 ; fi

  if [ "$_curver" = "$_remotever" ] ; then
    # We already did the auto-update, skip it
    export REPO_AUTOUPDATE=NO

    # Version matches upstream, we are safe to install!
    return 0
  fi

  # Looks like we have new FreeBSD upstream, lets prompt user to update
  echo "Warning: FreeBSD version on remote does not match local version!"
  echo ""
  echo "Installation halted. Please run '# pc-updatemanager pkgupdate' to"
  echo "update your system before installing new packages."
  echo ""
  echo "If you wish to by-pass this safety check, re-run your pkg command as"
  echo "# pkg-static <args>"
  echo ""
  echo "Note: This could be dangerous, be sure you know what you are doing!"
  exit 1
}

# Set when safe to skip sanity checks
safecmd=0

# Loop through arguments
for arg
do
  echo "$arg" | grep -q "^-"
  if [ $? -eq 0 ] ; then continue ; fi

  if [ "$arg" = "install" -a $safecmd -ne 1 ] ; then
    # Looks like we are installing, lets do a sanity check
    do_sanity_check

    # We can skip checking rest of arguments
    safecmd=1
    continue
  fi
  if [ "$arg" = "upgrade" -a $safecmd -ne 1 ] ; then
    # Warn user that 'pkg upgrade' is unsafe on rolling release
    echo "Warning: Using 'pkg upgrade' on TrueOS is dangerous!"
    echo "Please use 'pc-updatemanager pkgupdate' instead."
    echo ""
    echo "If you wish to by-pass this safety check, re-run your pkg command as"
    echo "# pkg-static <args>"
    echo ""
    echo "Note: This could be dangerous, be sure you know what you are doing!"
    exit 1
  fi
done

exec /usr/local/sbin/pkg-static "$@"
