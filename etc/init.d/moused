#!/sbin/openrc-run
# Copyright (c) 2007-2015 The OpenRC Authors.
# See the Authors file at the top-level directory of this distribution and
# https://github.com/OpenRC/openrc/blob/master/AUTHORS
#
# This file is part of OpenRC. It is subject to the license terms in
# the LICENSE file found in the top-level directory of this
# distribution and at https://github.com/OpenRC/openrc/blob/master/LICENSE
# This file may not be copied, modified, propagated, or distributed
# except according to the terms contained in the LICENSE file.

depend()
{
	need localmount
	after bootmisc
	keyword -jail -prefix -stop -shutdown
        provide mouse
}

mouse=${RC_SVCNAME##*.}
if [ -n "$mouse" -a "$mouse" != "moused" ]; then
	moused_device=/dev/"$mouse"
	pidfile=/var/run/moused-"$mouse".pid
else
	pidfile=/var/run/moused.pid
fi
name="Console Mouse Daemon"
[ -n "$moused_device" ] && name="$name ($moused_device)"



start()
{
	# When started in 'master' mode, search for available
	# mouse devices, and start them as sub-services
	if [ -z "$moused_device" ]; then
		export OPENRC_SILENT=TRUE
		local founddev=0
		local dev=
		for dev in /dev/psm[0-9]* /dev/ums[0-9]*; do
			[ -c "$dev" ] || continue
			[ -e /var/run/moused-"${dev##*/}".pid ] && continue
			ln -fs /etc/init.d/moused /etc/init.d/moused.${dev##*/}
			/sbin/service moused.${dev##*/} start
		done
		if [ $founddev ] ; then
			return 0
		else
			mark_service_inactive
			return 0
		fi
	fi

	if [ -z "$OPENRC_SILENT" ] ; then
		ebegin "Starting $name"
	fi

	if [ -z "$moused_device" ]; then
		mark_service_inactive
		eend 1 "No mouse device found"
		return 1
	fi

	local args=
	eval args=\$moused_args_${moused_device##*/}
	[ -z "$args" ] && args=$moused_flags

	start-stop-daemon --start --exec /usr/sbin/moused \
		--pidfile "$pidfile" \
		-- $args -p "$moused_device" -I "$pidfile"
	local retval=$?

	if [ $retval = 0 ]; then
		local ttyv=
		for ttyv in /dev/ttyv*; do
			vidcontrol < "$ttyv" -m on
			: $(( retval += $? ))
		done
	fi

	if [ -z "$OPENRC_SILENT" ] ; then
		eend $retval "Failed to start moused"
	fi
}

stop()
{
	if [ -z "$moused_device" ]; then
		# Loop through and stop all sub-services
		for dev in /dev/psm[0-9]* /dev/ums[0-9]*; do
			[ -c "$dev" ] || continue
			[ -e /var/run/moused-"${dev##*/}".pid ] || continue
			ln -fs /etc/init.d/moused /etc/init.d/moused.${dev##*/}
			/sbin/service moused.${dev##*/} stop
		done
		return 0
	fi

	if [ -z "$OPENRC_SILENT" ] ; then
		ebegin "Stopping $name"
	fi
	start-stop-daemon --stop --exec /usr/sbin/moused \
		-p $pidfile
	if [ -z "$OPENRC_SILENT" ] ; then
		eend $?
	fi
}
